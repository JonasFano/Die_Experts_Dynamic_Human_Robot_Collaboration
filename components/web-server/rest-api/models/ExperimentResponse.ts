/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExperimentResponse
 */
export interface ExperimentResponse {
    /**
     * 
     * @type {string}
     * @memberof ExperimentResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ExperimentResponse
     */
    start: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExperimentResponse
     */
    end: Date | null;
    /**
     * 
     * @type {string}
     * @memberof ExperimentResponse
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof ExperimentResponse
     */
    active: boolean;
}

/**
 * Check if a given object implements the ExperimentResponse interface.
 */
export function instanceOfExperimentResponse(value: object): value is ExperimentResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('end' in value) || value['end'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('active' in value) || value['active'] === undefined) return false;
    return true;
}

export function ExperimentResponseFromJSON(json: any): ExperimentResponse {
    return ExperimentResponseFromJSONTyped(json, false);
}

export function ExperimentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'start': (new Date(json['start'])),
        'end': (json['end'] == null ? null : new Date(json['end'])),
        'description': json['description'],
        'active': json['active'],
    };
}

export function ExperimentResponseToJSON(json: any): ExperimentResponse {
    return ExperimentResponseToJSONTyped(json, false);
}

export function ExperimentResponseToJSONTyped(value?: ExperimentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'start': ((value['start']).toISOString()),
        'end': (value['end'] == null ? null : (value['end'] as any).toISOString()),
        'description': value['description'],
        'active': value['active'],
    };
}

